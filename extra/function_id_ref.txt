

// BZxOrderTaking functions

web3.sha3("takeLoanOrderAsTrader(address[6],uint256[9],address,uint256,bytes)").substr(0,10)
'0x8fbbe7a2'
web3.sha3("takeLoanOrderAsLender(address[6],uint256[9],bytes)").substr(0,10)
'0x30769736'
web3.sha3("cancelLoanOrder(address[6],uint256[9],uint256)").substr(0,10)
'0xde5d838e'
web3.sha3("cancelLoanOrder(bytes32,uint256)").substr(0,10)
'0x8c0a1d7c'
web3.sha3("getLoanOrderHash(address[6],uint256[9])").substr(0,10)
'0x03efed44'
web3.sha3("isValidSignature(address,bytes32,bytes)").substr(0,10)
'0x238a4d1e'
web3.sha3("getInitialCollateralRequired(address,address,address,uint256,uint256)").substr(0,10)
'0x8823d53c'
web3.sha3("getUnavailableLoanTokenAmount(bytes32)").substr(0,10)
'0x08e3857c'
web3.sha3("getSingleOrder(bytes32)").substr(0,10)
'0xd8c73360'
web3.sha3("getOrders(address,uint256,uint256)").substr(0,10)
'0x27b62ad9'
web3.sha3("getSingleLoan(bytes32,address)").substr(0,10)
'0x49bd01ca'
web3.sha3("getLoansForLender(address,uint256,bool)").substr(0,10)
'0x512e5f9b'
web3.sha3("getLoansForTrader(address,uint256,bool)").substr(0,10)
'0x9974d431'
web3.sha3("getActiveLoans(uint256,uint256)").substr(0,10)
'0x982260bc'


// BZxTradePlacing functions

web3.sha3("tradePositionWith0x(bytes32,bytes,bytes)").substr(0,10)
'0xe92476a6'
web3.sha3("tradePositionWithOracle(bytes32,address)").substr(0,10)
'0xb3f73c40'


// BZxLoanMaintenance functions

web3.sha3("depositCollateral(bytes32,address,uint256)").substr(0,10)
'0x52cccdb3'
web3.sha3("withdrawExcessCollateral(bytes32,address,uint256)").substr(0,10)
'0x60056cf9'
web3.sha3("changeCollateral(bytes32,address)").substr(0,10)
'0x09c5a317'
web3.sha3("withdrawProfit(bytes32)").substr(0,10)
'0x92a9fe8b'
web3.sha3("getProfitOrLoss(bytes32,address)").substr(0,10)
'0xb195bdf3'


// BZxLoanHealth functions

web3.sha3("payInterest(bytes32,address)").substr(0,10)
'0xe7246aa3'
web3.sha3("liquidatePosition(bytes32,address)").substr(0,10)
'0xe75a4a2c'
web3.sha3("closeLoan(bytes32)").substr(0,10)
'0xf4ff7d2d'
web3.sha3("forceCloanLoan(bytes32,address)").substr(0,10)
'0x6e46c9bb'
web3.sha3("shouldLiquidate(bytes32,address)").substr(0,10)
'0xee73722f'
web3.sha3("getMarginLevels(bytes32,address)").substr(0,10)
'0xdb4d0ae0'
web3.sha3("getInterest(bytes32,address)").substr(0,10)
'0x60068e2d'



